yhfin:
  web:
    #是否开启swagger配置
    swagger: true
  data:
    #数据源实例注入 配置
    config: risk,redis,memory
    #内存数据库配置
    memory:
      #通过kettle同步内存数据配置
      kettle:
        #执行kettle文件的job名称
        job: H2memoryDataSynJob
        #执行kettle文件的job,需要的配置信息(数据库信息等)
        properties: C:/Users/youlangta/.kettle/kettle.properties
        #执行kettle文件的job对应的仓库
        reposity:
        #执行kettle文件的job对应的仓库的文件夹路径
         path: F:/kettle
      #内存数据源名称
      dataSourceName: memoryDataSource
      #内存数据源jdbc操作实例名称
      jdbcname: memoryJdbcOperations
      #内存数据源路径配置
      url: jdbc:h2:mem:memorydb
      #内存数据源web登录用户名
      username: sa
      #内存数据源web登录用户名对应的密码
      password:
      #内存数据库驱动类型
      driverClassName: org.h2.Driver
      #内存数据源 生命式数据源 事物实例名称
      transactionManager: MemorytransactionManager
    #风控数据库配置
    risk:
      #风控数据库名称
      dataSourceName: riskDataSource
      #风控数据库jdbc操作实例名称
      jdbcname: riskJdbcOperations
      #风控数据库连接配置url
      url: jdbc:oracle:thin:@localhost:1521:orcl
      #风控数据库登录用户名
      username: RISK_DEV
      #风控数据库登录密码
      password: RISK_DEV
      #风控数据源驱动类型
      driverClassName: oracle.jdbc.OracleDriver
      #风控数据源 生命式数据源 事物实例名称
      transactionManager: RisktransactionManager
    #sql配置


risk-bus:
  ribbon:
    #请求连接时间
    ConnectTimeout: 250
    #请求处理的超时时间
    ReadTimeout: 2000
    #多所有操作请求都进行重试
    OkToRetryOnAllOperations: true
    #切换实例重试次数
    MaxAutoRetriesNextServer: 2
    #对当前实例的重试次数
    MaxAutoRetries: 1

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            #hystrix默认熔断时间
            timeoutInMilliseconds: 8000

server:
  port: 9018

spring:
  #消息中间件rabbitmq配置
  rabbitmq:
    host: 192.168.100.100
    prot: 5672
    username: admin
    password: 415ilyILY
  cloud:
    stream:
      bindings:
        entry:
           destination: entry-channel
           contentType: application/json
        memory:
          destination: memory-channel
          contentType: application/json
        analy:
           destination: analy-channel
           contentType: application/json
        calculate:
          destination: calculate-channel
          contentType: application/json
        risk:
          destination: risk-channel
          contentType: application/json
        result:
          destination: result-channel
          contentType: application/json
        queryCalculate:
          destination: queryCalculate-channel
          contentType: application/json
    loadbalancer:
      retry:
        #重试机制开启
        enabled: true
  #redis集群配置
  redis:
    cluster:
      #redis集群节点配置
      nodes:
        - 192.168.100.100:7001
        - 192.168.100.100:7002
        - 192.168.100.100:7003
        - 192.168.100.100:7004
        - 192.168.100.100:7005
        - 192.168.100.100:7006
  #h2数据库配置
  h2:
    console:
      #h2数据库是否可以允许web端查看
      enabled: true
      settings:
       #h2数据库是否可以允许所有ip端web端查看
        web-allow-others: true



